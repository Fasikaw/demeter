[STRUCTURE]
root_dir =                      /users/ladmin/repos/github/demeter/example
in_dir =                        inputs
out_dir =                       outputs

[INPUTS]
allocation_dir =                allocation
base_dir =                      base
constraints_dir =               constraints
projected_dir =                 projected
ref_dir =                       reference

[[ALLOCATION]]
spatial_allocation =            spatial_allocation_rules.csv
gcam_allocation =               gcam_allocation_rules.csv
kernel_allocation =             kernel_density_allocation_rules.csv
priority_allocation =           priority_allocation_rules.csv
treatment_order =               treatment_order_allocation_rules.csv
constraints =                   constraints_allocation_rules.csv

[[BASE]]
base_lu_data =                  Gridcode_Land_AEZreg_coord_all_0p25_Monfreda_alt.txt

[[PROJECTED]]
projected_lu_data =             gcam_ref_scenario_aez_alt.csv

[[REFERENCE]]
gcam_regnamefile =              gcam_regions_32.csv
region_coords =                 regioncoord.csv
country_coords =                countrycoord.csv
limits_file =                   limits.csv

[OUTPUTS]
diag_dir =                      diagnostics
log_dir =                       log_files
kernel_map_dir =                kernel_density
transition_tabular =            transition_tabular
transition_maps =               transition_maps
luc_intense_p1_dir =            luc_intensification_pass1
luc_intense_p2_dir =            luc_intensification_pass2
luc_expand_dir =                luc_expansion
luc_ts_luc =                    luc_timestep
lc_per_step_csv =               spatial_landcover_tabular
lc_per_step_nc =                spatial_landcover_netcdf
lc_per_step_shp =               spatial_landcover_shapefile

[[DIAGNOSTICS]]
harm_coeff =                    harmonization_coeff.npy
intense_pass1_diag =            intensification_pass_one_diag.csv
intense_pass2_diag =            intensification_pass_two_diag.csv
expansion_diag =                expansion_diag.csv

[PARAMS]
# projection model name
model =                         GCAM

# projection model metric, currently AEZ or BASIN
metric =                        AEZ

# scenario name
scenario =                      example

# run description
run_desc =                      demeter_example

# aggregate level; 1 if only by metric, 2 if by both
agg_level =                     2

# spatial base layer id field name
base_id_field =                 fid

# first year to process
year_b =                        2005

# last year to process
year_e =                        2100

# enter 1 to use non-kernel density constraints, 0 to ignore non-kernel density constraints
use_constraints =               1

# the spatial resolution of the base lulc layer in decimal degrees
resin =                         0.25

# error tolerance in km2 for PFT area change not completed
errortol =                      0.001

# time step in years
timestep =                      5

# factor to multiply the projected land allocation by
proj_factor =                   1000

# output diagnostic reports
diagnostic =                    0

# from 0 to 1; ideal fraction of LUC that will occur during intensification, the remainder will be expansion
intensification_ratio =         0.8

# activates the stochastic selection of grid cells for expansion of any PFT
stochastic_expansion =          0

# threshold above which grid cells are selected to receive a given land type expansion; between 0 and 1, where 0 is all
#     land cells can receive expansion and set to 1 only the grid cell with the maximum likelihood will expand.  For
#     a 0.75 setting, only grid cells with a likelihood >= 0.75 x max_likelihood are selected.
selection_threshold =           0.75

# radius in grid cells to use when computing the kernel density; larger is smoother but will increase run-time
kerneldistance =                10

# if running random runs in parrallel shuffle the number of permutations
permutations =                  1

# create kernel density maps; 1 is True
map_kernels =                   0

# create land change maps
map_luc =                       0

# create land change maps for each intensification and expansion step
map_luc_steps =                 0

# map the total land change for all years for each PFT globally
map_tot_luc =                   0

# creates maps of land transitions for each time step
map_transitions =               0

# create maps of all constraints
map_constraints =               0

# years to save data for, default is all; otherwise a semicolon delimited string e.g, 2005;2050
target_years_output =           all

# save tabular spatial landcover as CSV; define tabular_units below (default sqkm)
save_tabular =                  1

# untis to output tabular data in (sqkm or percent)
tabular_units =                 percent

# exports CSV files of land transitions for each time step
save_transitions =              0

# create land cover per cell in km2 shapefile output for each time step
save_shapefile =                0
